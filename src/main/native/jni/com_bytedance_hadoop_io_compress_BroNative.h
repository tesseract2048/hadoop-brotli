/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_bytedance_hadoop_io_compress_BroNative */

#ifndef _Included_com_bytedance_hadoop_io_compress_BroNative
#define _Included_com_bytedance_hadoop_io_compress_BroNative
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    initializeCompressor
 * Signature: (Lsun/nio/ch/DirectBuffer;JIIII)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_initializeCompressor
  (JNIEnv *, jclass, jobject, jlong, jint, jint, jint, jint);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    freeCompressor
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_freeCompressor
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    getBlockSize
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_getBlockSize
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    copyOneBlockToRingBuffer
 * Signature: (JLsun/nio/ch/DirectBuffer;II)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_copyOneBlockToRingBuffer
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    compress
 * Signature: (JZ)Lcom/bytedance/hadoop/io/compress/BroNative/OutputStorage;
 */
JNIEXPORT jobject JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_compress
  (JNIEnv *, jclass, jlong, jboolean);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    fillOutputBuffer
 * Signature: (JLcom/bytedance/hadoop/io/compress/BroNative/OutputStorage;Lsun/nio/ch/DirectBuffer;II)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_fillOutputBuffer
  (JNIEnv *, jclass, jlong, jobject, jobject, jint, jint);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    initializeDecompressionState
 * Signature: (Lsun/nio/ch/DirectBuffer;J)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_initializeDecompressionState
  (JNIEnv *, jclass, jobject, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    decodeBuffer
 * Signature: (JILsun/nio/ch/DirectBuffer;IIJ)Lcom/bytedance/hadoop/io/compress/BroNative/DecodeProgress;
 */
JNIEXPORT jobject JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_decodeBuffer
  (JNIEnv *, jclass, jlong, jint, jobject, jint, jint, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    remainInBuffer
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_remainInBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    readBuffer
 * Signature: (JLsun/nio/ch/DirectBuffer;II)J
 */
JNIEXPORT jlong JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_readBuffer
  (JNIEnv *, jclass, jlong, jobject, jint, jint);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    freeBuffer
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_freeBuffer
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_bytedance_hadoop_io_compress_BroNative
 * Method:    freeDecompressionState
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_bytedance_hadoop_io_compress_BroNative_freeDecompressionState
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
